@model PagedList.IPagedList<Model.Notification>
@using PagedList.Mvc
@{
   
    Layout = null;
}
<table class="table">
    <tr style="background: #234a66; color: white;">
        <th style="width:600px;">
            Content
        </th>
        <th>
            From To
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr >
            <td style="word-wrap: break-word;">
                @Html.Raw(!String.IsNullOrEmpty(item.Content) ? item.Content.Substring(0, Math.Min(item.Content.Length, 50)): "No thing")
            </td>
            <td>
                Staff
            </td>
            <td>
                <a style="cursor:pointer" data-toggle="modal" data-target="#ViewNot" onclick="ViewNot(@item.NotificationID)">View More</a>
                <a style="        cursor: pointer;
        padding: 4px 10px;
        background: red;
        color: white;" onclick="DelNot(@item.NotificationID)" >Remove</a>
            </td>
        </tr>
    }

</table>
@Html.PagedListPager(Model, page => Url.Action( "MyNotify", new { page }),
    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions()
    {
        HttpMethod = "GET",
        UpdateTargetId = "main"
    }))
